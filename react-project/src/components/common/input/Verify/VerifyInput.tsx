import React, { useEffect, useState } from "react";
import styled from "styled-components";
import Input from "../Input";
import { Verify, VerifyStatus } from "./type";
import VerifyList from "./VerifyList";

interface Props {
  value: string;
  setValue(value: string): void; // value 변경내용을 받을 함수
  setPass(status: boolean): void; // status 여부를 받을 함수
  verify: Verify[]; // 판별 목록
  notice?: boolean; // 강조 효과 필요시 사용하세요! 진동 애니메이션이 추가됩니다
}

/**
 * 조건 판별이 수행되는 Input
 */
const VerifyInput = ({ value, setValue, setPass, verify, notice = false }: Props): JSX.Element => {
  // lazy verify 항목들에게 신호를 주기 위해 필요한 state
  const [lazyValue, setLazyValue] = useState<string>(value);
  const [status, setStatus] = useState<VerifyStatus>("default");

  // 판별 결과를 상위 컴포넌트에게 알립니다
  useEffect(() => {
    switch (status) {
      case "fail":
        setPass(false);
        return;
      case "pass":
        setPass(true);
        return;
      default:
        return;
    }
  }, [status]);

  return (
    <StyledDiv status={status} className={notice ? "shake" : undefined}>
      <Input value={value} setValue={setValue} focusOut={setLazyValue} />
      <VerifyList value={value} lazyValue={lazyValue} status={status} setStatus={setStatus} verify={verify} />
    </StyledDiv>
  );
};

const StyledDiv = styled.div<{ status: VerifyStatus }>`
  & > input {
    ${({ status }) => {
      switch (status) {
        case "default":
          return "color: var(--black-50); border-color: var(--black-50);";
        case "fail":
          return "color: var(--pink-500); border-color: var(--pink-500);";
        case "pass":
          return "color: var(--blue-500); border-color: var(--blue-500);";
        case "loading":
          return "color: var(--black-200); border-color: var(--black-200);";
      }
    }}
  }
  &.shake > input {
    -webkit-animation: shake-horizontal 0.8s cubic-bezier(0.455, 0.03, 0.515, 0.955) both;
    animation: shake-horizontal 0.8s cubic-bezier(0.455, 0.03, 0.515, 0.955) both;
  }
  /* ----------------------------------------------
 * Generated by Animista on 2023-3-22 16:19:27
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

  /**
 * ----------------------------------------
 * animation shake-horizontal
 * ----------------------------------------
 */
  @-webkit-keyframes shake-horizontal {
    0%,
    100% {
      -webkit-transform: translateX(0);
      transform: translateX(0);
    }
    10%,
    30%,
    50%,
    70% {
      -webkit-transform: translateX(-10px);
      transform: translateX(-10px);
    }
    20%,
    40%,
    60% {
      -webkit-transform: translateX(10px);
      transform: translateX(10px);
    }
    80% {
      -webkit-transform: translateX(8px);
      transform: translateX(8px);
    }
    90% {
      -webkit-transform: translateX(-8px);
      transform: translateX(-8px);
    }
  }
  @keyframes shake-horizontal {
    0%,
    100% {
      -webkit-transform: translateX(0);
      transform: translateX(0);
    }
    10%,
    30%,
    50%,
    70% {
      -webkit-transform: translateX(-10px);
      transform: translateX(-10px);
    }
    20%,
    40%,
    60% {
      -webkit-transform: translateX(10px);
      transform: translateX(10px);
    }
    80% {
      -webkit-transform: translateX(8px);
      transform: translateX(8px);
    }
    90% {
      -webkit-transform: translateX(-8px);
      transform: translateX(-8px);
    }
  }
`;

export default React.memo(VerifyInput);
