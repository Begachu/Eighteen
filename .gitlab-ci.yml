stages:          # List of stages for jobs, and their order of execution
  - libs
  - build
  - deploy


npm:
  stage: libs
  only:
    - develop
  # only:
  #   - dev
  cache:
    paths:
      - react-project/node_modules
  script:
    - cd react-project
    - npm install


react-project:
  stage: build
  only:
    - develop
  cache:
    paths:
      - react-project/build
      - react-project/node_modules
  needs: ["npm"]
  when: on_success
  script:
    - cd react-project
    - CI=false npm run build
    - docker build -t react-project .
    

user-service:
  stage: build
  only:
    - develop
  script:
    - cd user-service
    - chmod +x gradlew
    - ./gradlew clean bootJar

deploy-job-react-project:preparing_for_replace:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  only:
    - develop
  needs: ["react-project"]
  allow_failure: true
  when: on_success
  script:
    - docker container stop react-project && docker container rm react-project



deploy-job-react-project:replace_docker_container:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  only:
    - develop
  needs: ["deploy-job-react-project:preparing_for_replace"]
  allow_failure: true
  when: on_success
  script:
    - docker run -p 3000:3000 --name react-project react-project

# deploy-job-user-service:      # This job runs in the deploy stage.
#   stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#   environment: production
#   only:
#     - develop
#   allow_failure: true
#   script:
#     - echo -e "\033[32mDeploying application...\033[0m"
#     - echo -e "\033[32m'user service' will be starting...\033[0m"
#     - docker container stop user-service
#     - docker container rm user-service
#     - docker build -t user-service .
#     - docker run -p 3000:3000 --name user-service user-service
