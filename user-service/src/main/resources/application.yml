api_gateway_url: localhost

server:
  port: 8081

spring:
  application:
    name: user-service

  #??? ??
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${api_gateway_url}:3306/eighteen?serverTimezone=UTC&characterEncoding=UTF-8&useSSL=true
    username: root
    password: b304b304
#    url: jdbc:mysql://localhost:3306/eighteen?serverTimezone=UTC&characterEncoding=UTF-8&useSSL=true
#    username: blur
#    password: blur
    hikari:
      pool-name: jpa-hikari-pool
      maximum-pool-size: 5
      jdbc-url: ${spring.datasource.url}
      username: ${spring.datasource.username}
      password: ${spring.datasource.password}
      driver-class-name: ${spring.datasource.driver-class-name}
      data-source-properties:
        rewriteBatchedStatements: true

  # JPA ??
  jpa:
    generate-ddl: false
    hibernate:
      ddl-auto: validate
    show-sql: true
    database: mysql
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        hbm2ddl.import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
        default_batch_fetch_size: ${chunkSize:100}
        jdbc.batch_size: 20
        order_inserts: true
        order_updates: true
        format_sql: true

cloud:
  aws:
    credentials:
      accessKey: AKIATMXPXWJ3KXPLFKQU      # AWS IAM AccessKey 적기
      secretKey: tSEfYVO70M/kfnrWWRMuAZnrI8K+FCaVUt54G6Wt   # AWS IAM SecretKey 적기
    s3:
      bucket: eighteen-project    # ex) marryting-gyunny
      dir: /profileImage # ex) /gyunny
    region:
      static: ap-northeast-2
    stack:
      auto: false


